pipeline {
    agent any

    stages {
        stage('Instalar Dependencias') {
            steps {
                bat 'npm install'
            }
        }

        stage('Construir') {
            steps {
                bat 'npm run ng build'
            }
        }

        stage('Copia de Archivos') {
            steps {
                script {

                    def robocopyExitCode = bat(script: 'robocopy dist/ C:\\ACT_VOPP /E ^& exit %ERRORLEVEL%', returnStatus: true)

                    
                    echo "robocopy exit code: ${robocopyExitCode}"

                    
                    if (robocopyExitCode > 3) {
                        echo 'Error en la copia de archivos usando Robocopy.'
                        currentBuild.result = 'FAILURE'
                        
                      
                        sendEmail("destinatario1@yopmail.com", "Error en el Pipeline", "El pipeline ha fallado. Revisar los registros para mas detalles.")
                    } else {
                        echo 'Copia de archivos exitosa.'
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline ejecutado exitosamente. ¡Construcción y copia de archivos exitosas!'
            
           
            sendEmail("destinatario1@yopmail.com", "Pipeline Exitoso", "El pipeline se ejecutó exitosamente.")
        }
        failure {
            echo 'El pipeline ha fallado. Revisar los registros para más detalles.'
            
           
            sendEmail("destinatario1@yopmail.com", "Error en el Pipeline", "El pipeline ha fallado. Revisar los registros para más detalles.")
        }
    }
}

